package com.mesqr.android.db;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.DaoConfig;
import de.greenrobot.dao.Property;

import com.mesqr.android.db.Table;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table TABLE.
*/
public class TableDao extends AbstractDao<Table, Long> {

    public static final String TABLENAME = "TABLE";

    /**
     * Properties of entity Table.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Name = new Property(1, String.class, "Name", false, "NAME");
        public final static Property Latitude = new Property(2, Double.class, "Latitude", false, "LATITUDE");
        public final static Property Longitude = new Property(3, Double.class, "Longitude", false, "LONGITUDE");
        public final static Property TableRadius = new Property(4, Double.class, "TableRadius", false, "TABLE_RADIUS");
        public final static Property RowGuid = new Property(5, String.class, "RowGuid", false, "ROW_GUID");
        public final static Property Entered = new Property(6, java.util.Date.class, "Entered", false, "ENTERED");
    };


    public TableDao(DaoConfig config) {
        super(config);
    }
    
    public TableDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'TABLE' (" + //
                "'_id' INTEGER PRIMARY KEY ," + // 0: id
                "'NAME' TEXT," + // 1: Name
                "'LATITUDE' REAL," + // 2: Latitude
                "'LONGITUDE' REAL," + // 3: Longitude
                "'TABLE_RADIUS' REAL," + // 4: TableRadius
                "'ROW_GUID' TEXT," + // 5: RowGuid
                "'ENTERED' INTEGER NOT NULL );"); // 6: Entered
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'TABLE'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, Table entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String Name = entity.getName();
        if (Name != null) {
            stmt.bindString(2, Name);
        }
 
        Double Latitude = entity.getLatitude();
        if (Latitude != null) {
            stmt.bindDouble(3, Latitude);
        }
 
        Double Longitude = entity.getLongitude();
        if (Longitude != null) {
            stmt.bindDouble(4, Longitude);
        }
 
        Double TableRadius = entity.getTableRadius();
        if (TableRadius != null) {
            stmt.bindDouble(5, TableRadius);
        }
 
        String RowGuid = entity.getRowGuid();
        if (RowGuid != null) {
            stmt.bindString(6, RowGuid);
        }
        stmt.bindLong(7, entity.getEntered().getTime());
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public Table readEntity(Cursor cursor, int offset) {
        Table entity = new Table( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // Name
            cursor.isNull(offset + 2) ? null : cursor.getDouble(offset + 2), // Latitude
            cursor.isNull(offset + 3) ? null : cursor.getDouble(offset + 3), // Longitude
            cursor.isNull(offset + 4) ? null : cursor.getDouble(offset + 4), // TableRadius
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // RowGuid
            new java.util.Date(cursor.getLong(offset + 6)) // Entered
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, Table entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setName(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setLatitude(cursor.isNull(offset + 2) ? null : cursor.getDouble(offset + 2));
        entity.setLongitude(cursor.isNull(offset + 3) ? null : cursor.getDouble(offset + 3));
        entity.setTableRadius(cursor.isNull(offset + 4) ? null : cursor.getDouble(offset + 4));
        entity.setRowGuid(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setEntered(new java.util.Date(cursor.getLong(offset + 6)));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(Table entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(Table entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
